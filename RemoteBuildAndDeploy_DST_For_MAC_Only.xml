<?xml version="1.0" encoding="UTF-8"?>
<!-- Make sure you change the default method to download_IOS if you want to download ipa file from App Center-->
<project name="RemoteBuildAndDeploy_MYAPPNAME" basedir="." default="buildenvoy_iOS" >
 <!--####################################NOTES: THIS ANT SCRIPT IS FOR MAC ONLY####################################-->
    
    <!--  User Properties -->
    <!--  Please make sure to set the following properties before you run ant script -->
    <!--Optional for AppCenter: IBM_EXTERNAL_DST_APPCENTER" validargs="IBM_EXTERNAL_DST_APPCENTER,IBM_EXTERNAL_DST_APPCENTER_2,IBM_EXTERNAL_OFFICIAL_DEMOS_APPCENTER-->
    <property name="AppCenter" value="IBM_EXTERNAL_DST_APPCENTER_2"/>
    
    <!--This is for buildenvoy_iOS, you may comment out if you run other ant method-->
    <!--Optional for iOSSDK: iphoneos6.1,iphoneos7.0,iphoneos7.1,iphoneos8.0,iphoneos8.1-->
    <!--Optional for SigningSetupiOS: default,apns_enabled,other(more than one APNS)-->
    <!--Notice: for other option, you need to specify the APNS NAME, such as APNS_YOUR_APP_NAME -->
    <property name="iOSSDK" value="iphoneos8.0"/>
    <property name="SigningSetupiOS" value="default"/>
    <property name="APPDescription" value="application description"/>
    
    <!--This is for download_IOS, you may comment out if you run other ant method-->
    <property name="BundleID" value="com.ibm.cio.be.WFM" />
        
    <!--  BuildEnvoy Properties -->
    <property name="BuildServerURL" value="https://atlbzbuild01.atl.dst.ibm.com:8443"/>
    <property name="be.temp.dir" value="buildenvoy_temp"/>
    <property name="base.dir" value="./"/>
	
	<target name="-clean" description="clean out temporary files">
        <echo>cleanning buildenvoy temporary files/dir</echo>
        <delete dir="${be.temp.dir}" failonerror="true"/>     
    </target>
    
	
	<!-- ##################################### IOS build ##################################### -->
	
	<target name="-prep_iOS" depends="-clean" description="gather necessary artifacts">
         <echo>zipping up xcode project</echo>
         <mkdir dir="${be.temp.dir}"/>
         <zip destfile="${be.temp.dir}/be_iphone.zip"  basedir="${base.dir}"/>
    </target>
    
	<target name="buildenvoy_iOS" depends="-prep_iOS" description="launch remote xcode build and deploy app">
         <input message="Please enter your IBM Intranet ID:"  addproperty="IBMIntranetID" defaultvalue="youribmid@us.ibm.com"/>
         <input message="Please enter your IBM Intranet password:"  addproperty="IBMIntranetPW" defaultvalue="enter_your_password" />
         <echo>${IBMIntranetID}</echo>
         <echo>${BuildServerURL}</echo>
         <echo>${AppCenter}</echo>
         <echo>${APPDescription}</echo>
         <echo>${SigningSetupiOS}</echo>
         <echo>${iOSSDK}</echo>
         <echo>starting xcode remote build and deploy</echo>
         <exec executable="curl" failonerror="true"  dir="${be.temp.dir}" output="${be.temp.dir}/be.iOS.out"  outputproperty="be.iOS.out" logerror="true">
			<arg value="-i" />
			<arg value="--insecure" />
			<arg value="-u" />
			<arg value="${IBMIntranetID}:${IBMIntranetPW}" />
			<arg value="--form-string" />
			<arg value="signingSetup=${SigningSetupiOS}" />
			<arg value="--form-string" />
			<arg value="AppCenter=${AppCenter}" />
			<arg value="--form-string" />
			<arg value="appDescr=${APPDescription}" />
			<arg value="--form-string" />
			<arg value="iOSSDK=${iOSSDK}" />
			<arg value="-F" />
			<arg value="file=@be_iphone.zip" />
			<arg value="-F" />
			<arg value="http.protocol.expect-continue=true" />
			<arg value="${BuildServerURL}/BuildForgeProxy/envoy/nativeUpload/xcodeproj" />
		</exec>	
		<echo message = "${be.iOS.out}"/>
 		<condition property="iOS_builderror_found">
 	    	<contains string="${be.iOS.out}" substring="error" casesensitive="false" />
 		</condition>
 		<fail
 	    	if="${iOS_builderror_found}"
 	    	message="Problems encountered.  Please check error message above for more details.  
 	    	Ensure your id and password are correctly set.  
 	    	Ensure your AppID is set to comply with com.ibm.cio.be.* format."    />
 		<antcall target="-wait_for_iOS_build"/>
 		<antcall target="-clean"/>
 		<echo>.</echo>
        <echo>.</echo>
        <echo>xcode APPLICATION HAS BEEN SUCCESSFULLY BUILT AND DEPLOYED!!! </echo>
    </target>
    
	<target name="-get_iOS_buildID" description="gets iOS buildID">
        
        <exec executable="tail" osfamily="unix" failonerror="true"  dir="${be.temp.dir}"  output="${be.temp.dir}/be.iOS.json" >
			<arg value="-1" />
			<arg value="be.iOS.out" />
		</exec>
		
        <exec executable="tail.bat" osfamily="windows" failonerror="true"  dir="${be.temp.dir}"  output="${be.temp.dir}/be.iOS.json" >
			<arg value="-1" />
			<arg value="be.iOS.out" />
		</exec>
        
        <script language="javascript">

        	importClass(java.io.File);
        	importClass(java.io.FileReader);
        	importClass(java.io.BufferedReader);
        	importClass(java.io.FileWriter);
        	importClass(java.io.BufferedWriter);

        	echo = project.createTask("echo");
        	echo.setMessage("Getting BuildID for iOS request");
        	echo.perform();

        	var file = new File(project.getProperty("be.temp.dir") + "/be.iOS.json");
        	fr = new FileReader(file);
        	br = new BufferedReader(fr);

        	// Read the file. 
        	// This assumes the file has no line breaks and is one line.
        	var json = br.readLine();

        	// Evaluate the JSON.
        	var struct = eval("(" + json + ")");

        	// Set each property in the project environment.
        	for (i in struct) {
            	echo = project.createTask("echo");
            	echo.setMessage(i + "=" + struct[i]);
            	echo.perform();
            	project.setProperty("iOS_" + i,struct[i]);
            	if (i.equals("buildID")) {
            		echo.setMessage("FOUND: " + i + "=" + struct[i]);
             		echo.perform();
            	}          
        	}
        </script> 
        <echo>iOS_buildID FOUND1 ${iOS_buildID}</echo>
        <antcall target="-check_buildenvoy_iOS_status"/>
          
    </target>    

    <target name="-wait_for_iOS_build">
        <echo>WAITING for iOS BUILD Results</echo>
		<waitfor maxwait="5" maxwaitunit="minute" checkevery="10" checkeveryunit="second"> 
		        <scriptcondition language="javascript" value="false">
    				importClass(java.io.File);
        			importClass(java.io.FileReader);
        			importClass(java.io.BufferedReader);
        			importClass(java.io.FileWriter);
        			importClass(java.io.BufferedWriter);
        			
        			call = project.createTask("antcall");
        			call.setInheritAll(true);
        			call.setInheritRefs(true);
        			call.setTarget("-get_iOS_buildID");
        			call.perform();   				

        			echo = project.createTask("echo");
        			echo.setMessage("Waiting and checking on iOS build status");
        			echo.perform();
        			
        			var file2 = new File(project.getProperty("be.temp.dir") + "/be.iOS.json");
        			fr2 = new FileReader(file2);
        			br2 = new BufferedReader(fr2);
        			
        			var json2 = br2.readLine();
        			var struct2 = eval("(" + json2 + ")");
        			project.setProperty("iOS_buildID",struct2["buildID"]);
        			       			
        			echo.setMessage("CONFIG be.temp.dir= " + project.getProperty("be.temp.dir") + " iOS_buildID= " + project.getProperty("iOS_buildID"));
        			echo.perform();
        			
        			var file = new File(project.getProperty("be.temp.dir") + "/" + project.getProperty("iOS_buildID") + "_status.out");
        			fr = new FileReader(file);
        			br = new BufferedReader(fr);
        			
        			// Read the file. 
        			// This assumes the file has no line breaks and is one line.
        			var json = br.readLine();

        			// Evaluate the JSON.
        			var struct = eval("(" + json + ")");
        			        			     			
        			if ("COMPLETED".equals(struct["state"]))  {
        				self.setValue(true);
        				if ("Cancelled".equals(struct["stage"]) || "Died".equals(struct["stage"])) {
        					project.setProperty("iOS_build_cancelled",true);
        					echo.setMessage("BUILD WAS CANCELLED... ");
        					echo.perform();
        				} else if ("Built".equals(struct["stage"])) {
        				    echo.setMessage("BUILD HAS COMPLETED AND iOS APP HAS BEEN DEPLOYED.  DOWNLOAD APP FROM APP CENTER");
        					echo.perform();
        				} else if ("Failed".equals(struct["stage"])) {
        					project.setProperty("iOS_build_failed",true);
        					echo.setMessage("BUILD HAD FAILED... CHECK YOUR APP ID AND ENSURE TO REDEPLOY iOS ENVIRONMENT");
        					echo.perform();
        				}     				
        			} else {
        				echo.setMessage("BUILD IN PROGRESS... " + struct["state"] + ": " + struct["stage"]);
        				echo.perform();
        				self.setValue(false); 
        			}     			
				</scriptcondition>
       </waitfor>
       <fail
 	    	if="iOS_build_failed"
 	    	message="xcode Build has failed. Ensure your App ID has been set correctly to comply with wildcard: com.ibm.cio.be.
 	    	Contact administrator for more details."    />
       
        <fail
 	    	if="iOS_build_cancelled"
 	    	message="Build request has been cancelled by administrator. Please try again or contact administrator to report problem."    />
       
	</target>
	
        
    <target name="-check_buildenvoy_iOS_status"  description="checks build and deploy status for iOS build request">
         <echo>checking build envoy_status for xcode build request: ${iOS_buildID}</echo>
         <exec executable="curl" failonerror="true"  dir="${be.temp.dir}" output="${be.temp.dir}/be_iOS_status.out" outputproperty="be_iOS_status.out" errorproperty="be_iOS_status.err" logerror="true">
			<arg value="-i" />
			<arg value="--insecure" />
			<arg value="-u" />
			<arg value="${IBMIntranetID}:${IBMIntranetPW}" />
			<arg value="${BuildServerURL}/BuildForgeProxy/envoy/status/${iOS_buildID}" />
		</exec>
		<echo message = "${be_iOS_status.out}"/>
 		<condition property="iOS_statuserror_resourcenotavailable_found">
 	    	<contains string="${be_iOS_status.out}" substring="The requested resource () is not available." casesensitive="false" />
 		</condition>
 		<fail
 	    	if="${iOS_statuserror_resourcenotavailable_found}"
 	    	message="BuildEnvoy is currently not reachable. 
 	    	Contact the system administrator to report problem."    />
 		 <condition property="iOS_statuserror_found">
 	    	<contains string="${be_iOS_status.out}" substring="error" casesensitive="false" />
 		</condition>
 		<fail
 	    	if="${iOS_statuserror_found}"
 	    	message="Problems encountered.  Please check error message above.  
 	    	Ensure your id and password are correctly set.  
 	    	Ensure your AppID is set to comply with com.ibm.cio.be.* format."    />
 		 <antcall target="-get_buildenvoy_iOS_status"/>
    </target>
        
    <target name="-get_buildenvoy_iOS_status" description="gets iOS build status">
         <exec executable="tail" osfamily="unix" failonerror="true"  dir="${be.temp.dir}"  output="${be.temp.dir}/be_iOS_status.json" >
			<arg value="-1" />
			<arg value="be_iOS_status.out" />
		</exec>
		
        <exec executable="tail.bat" osfamily="windows" failonerror="true"  dir="${be.temp.dir}"  output="${be.temp.dir}/be_iOS_status.json" >
			<arg value="-1" />
			<arg value="be_iOS_status.out" />
		</exec>
        
        <script language="javascript">

        	importClass(java.io.File);
        	importClass(java.io.FileReader);
        	importClass(java.io.BufferedReader);
        	importClass(java.io.FileWriter);
        	importClass(java.io.BufferedWriter);

        	echo = project.createTask("echo");
        	echo.setMessage("Getting iOS build status");
        	echo.perform();

        	var file = new File(project.getProperty("be.temp.dir") + "/be_iOS_status.json");
        	fr = new FileReader(file);
        	br = new BufferedReader(fr);

        	// Read the file. 
        	// This assumes the file has no line breaks and is one line.
        	var json = br.readLine();

        	// Evaluate the JSON.
        	var struct = eval("(" + json + ")");

        	// Set each property in the project environment.
        	for (i in struct) {
            	echo = project.createTask("echo");
            	echo.setMessage(i + "=" + struct[i]);
            	echo.perform();
            	project.setProperty("iOS_" + i,struct[i]);
            	if ("state".equals(i)) {
            		echo.setMessage("FOUND state: " + i + "=" + struct[i]);
             		echo.perform();
            	}          
        	}
        	

        </script> 
        <echo>iOS_state FOUND state ${iOS_state}</echo>
        <echo>${be.temp.dir}/${iOS_buildID}_status.out</echo>
		<echo file="${be.temp.dir}/${iOS_buildID}_status.out">{"state":"${iOS_state}","stage":"${iOS_stage}"}</echo>
    </target>
    
    <!-- ##################################### Start to download iOS file ##################################### -->
    <target name="-prep_IOSDownload"  description="gather necessary artifacts">
        <mkdir dir="${be.temp.dir}"/>
    </target>
    
    <target name="download_IOS" depends="-clean, -prep_IOSDownload">
        <input message="You are accessing an .ipa file created using the Apple iOS SDK Enterprise Account for IBM.This file must only be used internally within IBM.Transmitting this file outside of IBM is in breach of the license and may be a violation of the Business Conduct Guidelines." addproperty="Warning" defaultvalue="Disagree" validargs="Agree,Disagree"/>
        <condition property="iOSDownload_LegalWarning_Error">
            <contains string="${Warning}" substring="disagree" casesensitive="false" />
        </condition>
        <fail
        if="${iOSDownload_LegalWarning_Error}"
        message="You need agree the Legal Warning" />
        <echo>${IBMIntranetID}</echo>
        <echo>${BuildServerURL}</echo>
        <echo>${BundleID}</echo>
        <echo>${AppCenter}</echo>
        <echo>starting IOS remote download</echo>
        <exec executable="curl" failonerror="true"  dir="${be.temp.dir}" output="${be.temp.dir}/be.IOS.ipa"  outputproperty="be.IOS.ipa" logerror="true">
            <arg value="--insecure" />
            <arg value="-u" />
            <arg value="${IBMIntranetID}:${IBMIntranetPW}" />
            <arg value="--form-string" />
            <arg value="AppCenter=${AppCenter}" />
            <arg value="--form-string" />
            <arg value="BundleID=${BundleID}" />
            <arg value="-D" />
            <arg value="be.IOS.header" />
            <arg value="-F" />
            <arg value="http.protocol.expect-continue=true" />
            <arg value="${BuildServerURL}/BuildForgeProxy/envoy/fileDownload/IOS" />
        </exec>
        <antcall target="-check_IOS_Download"/>
        <antcall target="-popup_IOS_MetaData_Info"/>
        <antcall target="-open_IOS_web"/>
        <echo>.</echo>
        <echo>.</echo>
        <echo>IOS APPLICATION HAS BEEN SUCCESSFULLY DOWNLOAD!!! </echo>
    </target>
    
    <target name="-check_IOS_Download">
        <echo>Check IOS download information</echo>
        <script language="javascript">
            importClass(java.io.File);
            importClass(java.io.FileReader);
            importClass(java.io.BufferedReader);
            importClass(java.io.FileWriter);
            importClass(java.io.BufferedWriter);
            
            echo = project.createTask("echo");
            echo.setMessage("Check request");
            echo.perform();
            
            var file = new File(project.getProperty("be.temp.dir") + "/be.IOS.header");
            fr = new FileReader(file);
            br = new BufferedReader(fr);
            // Check the header.
            for (var line = br.readLine(); line != null; line = br.readLine()) {
            
            if(line.contains("Error")){
            project.setProperty("IOS_downloaderror_failed",true);
            echo.setMessage(line);
            echo.perform();
            }
            }
        </script>
        <fail
        if="IOS_downloaderror_failed"
        message="Problems encountered.  Please check error message for more details.
        Make sure your App (bundleId) exists in the selected App Center"    />
    </target>
    
    <target name="-popup_IOS_MetaData_Info">
        <script language="javascript">
            importClass(java.io.File);
            importClass(java.io.FileReader);
            importClass(java.io.BufferedReader);
            importClass(java.io.FileWriter);
            importClass(java.io.BufferedWriter);
            
            echo = project.createTask("echo");
            echo.setMessage("Pop up Metadata Information");
            echo.perform();
            
            var file = new File(project.getProperty("be.temp.dir") + "/be.IOS.header");
            fr = new FileReader(file);
            br = new BufferedReader(fr);
            // Read the file.
            var json;
            for (var line = br.readLine(); line != null; line = br.readLine()) {
            echo.setMessage(line);
            echo.perform();
            if(line.contains("MetaData")){
            json = line.substring(10);
            }
            }
            
            echo.setMessage(json);
            echo.perform();
            var struct = eval("(" + json + ")");
            for(var i in struct){
            echo.setMessage(i + "," + struct[i]);
            
            project.setProperty("IOS_" + i,struct[i]);
            echo.perform();
            }
            
            var type = project.getProperty("IOS_Type");
            var name = project.getProperty("IOS_Name");
            var appVersion = project.getProperty("IOS_AppVersion");
            var description =  project.getProperty("IOS_Description");
            var fileLocation = project.getProperty("basedir");
            var newLocation = fileLocation + "/buildenvoy_temp";
            
            var file1 = new File(project.getProperty("be.temp.dir") + "/MetaDataInfo.html");
            fw1 = new FileWriter(file1);
            bw1 = new BufferedWriter(fw1);
            var html = "&lt;html&gt;"
            + "&lt;h2&gt;" + name + " metadata information to submit your app to the IBM App Store&lt;/h2&gt;"
            + "This page provides you with your app's metadata information and binary file to fill out the application form to submit your production-ready app to the IBM App Store.&lt;br&gt;&lt;br&gt;"
            + "Click on the following link to begin the process of submitting your production-ready app to the IBM App Store  &lt;a href='https://w3.tap.ibm.com/appcatalog/user' style='TEXT-DECORATION:none;font-style:italic;font-size:24px' target='_blank'&gt;Begin Here&lt;/a&gt;&lt;br&gt;&lt;br&gt;"
            + "Your " + name + " has been downloaded to the following location in your computer: " + newLocation + "&lt;br&gt;&lt;br&gt;&lt;br&gt;"
            + "Your app's metadata information: &lt;br&gt;"
            + "&lt;h5&gt;Type : " + type + "&lt;/h5&gt;"
            + "&lt;h5&gt;Name : " + name + "&lt;/h5&gt;"
            + "&lt;h5&gt;App Version : " + appVersion + "&lt;/h5&gt;"
            + "&lt;h5&gt;Description : " + description + "&lt;/h5&gt;"
            + "&lt;h5&gt;OS : iOS&lt;/h5&gt;"
            + "&lt;/html&gt;";
            fw1.write(html);
            fw1.flush();
            fw1.close();
        </script>
        <rename src="${be.temp.dir}/be.IOS.ipa" dest="${be.temp.dir}/${IOS_Name}"/>
    </target>
    <!-- Forward to IBM App Store -->
    <target name="-open_IOS_web" >
        <exec executable="open" osfamily="unix" failonerror="true" >       
            <arg value="${be.temp.dir}/MetaDataInfo.html" />
        </exec>
    </target>    
    <!-- ##################################### End to download iOS file ##################################### -->
</project>